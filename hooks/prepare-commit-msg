#!/bin/bash

if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=(master develop test)
fi

BRANCH_NAME=$(git symbolic-ref --short HEAD)
BRANCH_NAME="${BRANCH_NAME##*/}"

BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
BRANCH_IN_COMMIT=$(grep -c "\[$BRANCH_NAME\]" "$1")
TICKET_NAME=""
BRANCH_NAME=`git symbolic-ref --short HEAD`

if [[ $BRANCH_NAME =~ /([A-Z]{1,4}-[0-9]{1,4}) ]]; then
    TICKET_NAME=${BASH_REMATCH[1]}
fi

exec < /dev/tty

if ["$TICKET_NAME" -ne ""]; then 
	while read -p "Is this for ticket number $TICKET_NAME (Y/n) " yn; do
    case $yn in
        [Yy] ) break;;
        [Nn] ) TICKET_NAME=""
          break;;
    esac
	done
fi

if ["$TICKET_NAME" -eq ""]; then
	echo "What is the ticket number?"
	read -r TICKET_NAME
fi

if [ -n "$BRANCH_NAME" ] && ! [[ $BRANCH_EXCLUDED -eq 1 ]] && ! [[ $BRANCH_IN_COMMIT -ge 1 ]]; then
	echo 'What kind of CHANGE is this? '
	# shellcheck disable=SC2039
	CHANGE=("Patch" "Feature" "Breaking" "Quit")
	# shellcheck disable=SC2039
  	# shellcheck disable=SC1073
  	select val in "${CHANGE[@]}"; do
      case $REPLY in
          "1")
				 sed -i.bak -e "1s/^/patch($TICKET_NAME):  /" "$1"
            exit
            ;;
          "2")
            sed -i.bak -e "1s/^/feat($TICKET_NAME): /" "$1"
            exit
            ;;
          "3")
            sed -i.bak -e "1s/^/perf($TICKET_NAME): /" "$1"
            exit
            break
              ;;
          "4")
            echo "User requested exit"
            exit
            ;;
          *) echo "invalid option $REPLY";;
      esac
  done
fi
